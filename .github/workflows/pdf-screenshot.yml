name: PDF Screenshot Generator

on:
  push:
    branches: [main]   # 只在 main 分支被 push 时运行（即 PR merge 后）
  workflow_dispatch:    # 也支持手动触发

jobs:
  generate-screenshots:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'   # 跳过机器人提交
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyMuPDF

      - name: Make script executable
        run: chmod +x cover.py

      - name: Generate covers and README for missing folders
        run: |
          set -euo pipefail
          IFS=$'\n'
          updated=0

          echo "📂 Scanning Weekly_upload/ for PDF directories…"
          for dir in $(find Weekly_upload -mindepth 1 -maxdepth 1 -type d); do
            if [ ! -f "$dir/README.md" ]; then
              echo "📝 Generating README for: $dir"
              python3 cover.py "$dir" "$dir"
              updated=1
            else
              echo "✅ Skipping $dir (README already exists)"
            fi
          done

          if [ "$updated" -eq 1 ]; then
            echo "🟢 New README generated, updating main README..."
            python3 readme_update.py
          else
            echo "ℹ️ No new README generated, skip updating main README."
          fi

      - name: Commit and push generated content
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "PDF Screenshot Bot"

          git add .

          if git diff --cached --quiet; then
            echo "✅ No changes to commit"
          else
            git commit -m "Auto-generate README and previews [skip ci]"
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git push origin "$BRANCH"
          fi
